<div><h5>15.03.12</h5><h1>Plugin Usage</h1></div><p>my relationship with plugins</p>

<p>I've been programming for the web for almost three years now, and programming 'aggressively' for almost two years now. I use the term 'aggressively' to describe my relationship with actual scripting versus 'simple' markup: my learning of the two have often gone hand in hand, but they still are obviously different. my first experience with markup was with OSX's textedit in plain text mode, with a then-outdated book on how to learn HTML in 24 hours (xhtml was referred to as 'trouble on the horizon'). without any sort of code coloring or suggestions, any problems I had were to be diagnosed by myself. this seems like a ridiculous way to learn HTML – and in hindsight, knowing what I know now about the wonderful Komodo Edit, I can't believe I carried on with that for as long as I did – but I learned the basics in a proverbial trial by fire. for anyone learning HTML, I can't recommend this method enough: not because it is easy, but because it is difficult. the onus of problem solving is placed squarely on the shoulders of the programmer.</p>

<p>after launching a couple websites, I then found myself knee deep in script-based programming by way of the delicious framework known as processing. the level of community based support was absolutely intoxicating: to walk into such a well supported environment that wants to share its secrets with you is precisely how programming ought to be learned. of course, this is fortunately how most programming communities function; but at the time, I only knew of the bounties of Processing. with the help of two unbelievably intelligent gentlemen, each with the patience of a hundred saints, I learned the ropes of scripting languages, which eventually got me started down the path of jquery, and then javascript (backwards, I know): remember, I'm still a graphic designer at heart, and my desire to make things pretty is undying. I've since applied this programming expertise to my foundation of aesthetics, and vice versa, to (hopefully) enter the ranks of the still-scarce web-designers.</p>

<p>as a side note, and this may someday find its way into a more full-form argument, I think people who go to school for interaction design are morons. there, I said it.</p>

<p>I have always maintained that developing your own solutions versus simply leaning on a plugin is a far more rewarding experience, not to mention highly learning. of course, everything we use to create what we do is a plugin upon a plugin: jquery is a plugin of javascript is a plugin of java, HTML is a subset of SGML is a subset of GML, and so on. however, to truly understand the going on of what you're making, one must dive into the annals of coding itself. it is far too dangerous to simply drop a plugin onto a page, and hope it works. without any background knowledge as to how the plugin might work, might pull variables and push data around, you're effectively allowing a stranger into your home to redecorate. he may very well do a fine job, but there's an equal chance, especially if you're unaware of his background, that he'll either fuck it up horribly, or disembowel you and subsequently decorate the house with your entrails.</p>

<p>it is for this reason that I am strongly against the usage of Dreamweaver or Muse. not because it's an axe murderer; but rather it puts things onto a page with little regard for its surroundings, causing a tremendous mess that then needs to be debugged, which is often far beyond the scope of what the programmer is capable of. I can appreciate making the development interface more linear by including a 'live view', but it is far outweighed by its utter inability to produce linear, fluid code.</p>

<p>however, I would postulate that once you do know what the hell is going on behind the scenes, the use of plugins is not only acceptable, but they can make your life quite a bit easier. approached by a client with the hearty deadline of one month for the deployment of a website, whereas I would normally build image galleries and movements myself, I am also working full-time at an agency, and so the use plugins has been elected as the primary source of production.</p>

<p>moral of the story: don't use plugins if you don't know what's going on behind the scenes.</p>
